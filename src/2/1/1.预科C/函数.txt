0.问题的引入
    有时候,我们经常需要在一个程序中,对数组进行一个输入
    如:
        int a[10];
        for(i = 0;i < 10;i++)
        {
            scanf("%d",&a[i]);
        }


        ....
        int b[5];
        for(i = 0;i < 5;i++)
        {
            scanf("%d",&b[i]);
        }

    上面这两个代码块,功能是相同的,只有数组名和元素个数不一样
    参数不一样,代码形式是一样的,对于功能相同但是参数不一样的代码快
    我们如何重复利用这个代码?

        对于功能相同但是参数不一样的代码块,我们会使用函数来进行代码的编写
        函数  -> 重复利用代码块


1.函数
    (1)什么是函数?
        function 功能 
        函数就是完成某种功能的指令序列的封装

        在C语言中,指令必须在函数内部的

        函数实现代码复用,能够实现模块化编程
        结构化编程(模块化)主张把一个大任务分成多个功能函数来实现

            优点:
                任务分工,团队合作,提高开发效率;
                代码复用,减少程序冗余;
                提高程序可读性;
                利于调试和维护

    (2)如何设计一个函数?
        函数是一个功能实现的指令序列的封装
        函数是用来实现功能的

        例子:
            炒菜的时候,锅子就是函数
            可以用不同的食材炒出不同的菜
            并且炒菜的步骤也是有一个顺序

            食材就是我们输入的参数,成品(结果)就是炒出来的菜


        四点:
            1)明确函数的功能是什么? 要完成的是一个什么目标
                确定函数的"函数名"
                例子:
                    求一个数组的最大值
                    find_max
                
                函数名:符合C语言的标识符的规定
                一旦你确定了函数名,那么你这个函数肯定是要来实现你的功能
            
            2)完成这个目标需要哪一些条件?   输入参数
                "完成任务需要输入的资源"

                例子:
                    求一个数组的最大值

                    需要:有一个数组

            3)完成这个目标之后需要得到一个什么? 返回值
                返回值就是函数返回结果的一个类型

                例子:
                    0   没有了
                    1   半路被别人抢了
                    2   根本没下楼

                    ...
                函数的一个执行结果

            4)算法实现和代码,调试等等


        例子:
            1.求两个整数的和

                (1)明确目标
                    "求和" 求两个整数的和
                    确定函数名:sum

                (2)完成目标,需要哪些东西
                    "两个整数"
                    sum(int a,int b)

                (3)完成目标后,需要得到一个啥?
                    得到两个整数的和
                    确定返回值的类型

                    int sum(int a,int b);

                (4)函数的代码实现
                    int sum(int a,int b)
                    {
                        return a+b;
                    }

                    sum(3,4);
                    sum(5,6);

    (3)C语言中函数的语法形式

        函数的返回值类型 函数名(输入参数列表)
        {
            C语句,具体的函数的实现;
        }

        函数的返回值类型:
            return语句后面跟着的那个表达式的值的类型
                一般是一个单值类型,基本类型和指针类型

                函数也可以不带返回值: void 
                函数不指定返回值的类型的话.默认为int类型
                例子;
                        (int) main()

        函数名:合法的标识符,尽量编程规范

        输入参数列表:
                类型1 参数名1,类型2 参数名2,......

                void:表示该函数不带参数


        return:一般是在函数的最后面,只能在函数内部
                表示函数结束的意思

                return ;//函数不带返回值 
                return 表达式;//函数结束,带一个返回值,"表达式的值"
                    函数的返回值类型,具体根据return后面的类型来决定

        注意:
            函数是不能够嵌套定义的,不能在函数内部定义函数,只能定义在外面


        例子:
            求两个数的和 
            /*
                sum:求两个函数的和
                参数列表:
                    a:加数a
                    b:加数b

                返回值:int类型,两个数的和
            */
                int sum(int a,int b)
                {
                    int c = a + b;
                    return c;//return a+b;
                }

            现在函数写好了,怎么用?

    (4)函数的调用过程 很重要!!!
        函数调用:使用一个已经写好了的函数
            "执行一个功能代码/任务"

        
        1)如何调用函数?
            a.看需要完成的功能是哪一个功能,我们才能选取函数名

            b.看完成这个任务需要我们输入什么,就输入对应的值


                主调函数:调用其他函数的那个函数.比如:main()
                被调函数:被其它函数调用的那个函数 比如:sum()

                形式参数:定义函数的时候的参数 "形参"
                实际参数:调用的时候实际传入的值,"实参"

                /*
                sum:求两个函数的和
                参数列表:
                    a:加数a
                    b:加数b

                返回值:int类型,两个数的和
                */
                int sum(int a,int b)
                {
                    int c = a + b;
                    return c;//return a+b;
                }
                    

                int main()
                {
                    int a;
                    a = sum(3,4);
                }

            在函数的调用过程的时候,需要指定实际参数,并且这个实际参数的值是和形参一对一对应的

            函数的形参和实参之间的关系:值传递
            "值传递":就是把实参的值传给相应的形参,再带入函数进行运算

            那到底函数的执行过程是怎么样的?
                